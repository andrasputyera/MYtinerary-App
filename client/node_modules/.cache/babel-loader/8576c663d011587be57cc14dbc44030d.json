{"ast":null,"code":"import _classCallCheck from \"/Users/andrasputyera/Desktop/Ubiqum/Module 4/module4Mern/mytineraryapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrasputyera/Desktop/Ubiqum/Module 4/module4Mern/mytineraryapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrasputyera/Desktop/Ubiqum/Module 4/module4Mern/mytineraryapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrasputyera/Desktop/Ubiqum/Module 4/module4Mern/mytineraryapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrasputyera/Desktop/Ubiqum/Module 4/module4Mern/mytineraryapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrasputyera/Desktop/Ubiqum/Module 4/module4Mern/mytineraryapp/client/src/components/Cities.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getCities } from '../actions/citiesActions';\nimport { connect } from 'react-redux';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cities, _Component);\n\n  function Cities() {\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cities).call(this));\n    _this.state = {\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"updateSearch\",\n    value: function updateSearch(event) {\n      this.setState({\n        search: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // axios.get(\"/api/city\").then(res => {\n      // console.log(res);\n      //   this.setState({ cities: res.data });\n      this.props.getCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var filteredCities = this.props.cities.cities.filter(function (city) {\n        return city.name.toLowerCase().indexOf(_this2.state.search) !== -1;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Cities\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.search,\n        ref: \"search\",\n        onChange: this.updateSearch.bind(this),\n        placeholder: \"type city here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, filteredCities.map(function (city) {\n        return React.createElement(\"div\", {\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Link, {\n          citiId: city._id,\n          to: \"/itinerary/\".concat(city._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, city.name, \" \", city.country))));\n      })));\n    }\n  }]);\n\n  return Cities;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.reducerOne\n  };\n};\n\nCities.propTypes = {\n  getCities: PropTypes.func.isRequired,\n  cities: PropTypes.object.isRequired\n}; // <div className=\"citiesInfo\">\n// <h2>Barcelona</h2>\n//     <img src={barcelona} className=\"cityImg\" alt=\"img\"/>\n//     <h2>Sydney</h2>\n//     <img src={sydney} className=\"cityImg\" alt=\"img\"/>\n//     <h2>Vancouver</h2>\n//     <img src={vancouver} className=\"cityImg\" alt=\"img\"/>\n// </div>\n\nexport default connect(mapStateToProps, {\n  getCities: getCities\n})(Cities);","map":{"version":3,"sources":["/Users/andrasputyera/Desktop/Ubiqum/Module 4/module4Mern/mytineraryapp/client/src/components/Cities.js"],"names":["React","Component","PropTypes","Link","getCities","connect","Cities","state","search","event","setState","target","value","props","console","log","filteredCities","cities","filter","city","name","toLowerCase","indexOf","updateSearch","bind","map","_id","country","mapStateToProps","reducerOne","propTypes","func","isRequired","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,M;;;;;AACF,oBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAFY;AAKb;;;;iCAEYC,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACF,QAAAA,MAAM,EAAEC,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACD;;;wCAEiB;AAClB;AACA;AACA;AACE,WAAKC,KAAL,CAAWT,SAAX;AACD;;;6BAGM;AAAA;;AACPU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACE,UAAIG,cAAc,GAAG,KAAKH,KAAL,CAAWI,MAAX,CAAkBA,MAAlB,CAAyBC,MAAzB,CACnB,UAACC,IAAD,EAAU;AACR,eAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgC,MAAI,CAACf,KAAL,CAAWC,MAA3C,MAAsD,CAAC,CAA9D;AACD,OAHkB,CAArB;AAKA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,MAFlB;AAGA,QAAA,GAAG,EAAC,QAHJ;AAIA,QAAA,QAAQ,EAAE,KAAKe,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAJV;AAKA,QAAA,WAAW,EAAC,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCR,cAAc,CAACS,GAAf,CAAmB,UAAAN,IAAI,EAAI;AAC1B,eACF;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACO,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAEP,IAAI,CAACO,GAAnB;AAAwB,UAAA,EAAE,uBAAgBP,IAAI,CAACO,GAArB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKP,IAAI,CAACC,IAAV,OAAiBD,IAAI,CAACQ,OAAtB,CADF,CADA,CADF,CADE;AAUD,OAXA,CADD,CAdF,CADA;AAgCD;;;;EA3DgB1B,S;;AA+DnB,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,KAAD;AAAA,SAAY;AAClCU,IAAAA,MAAM,EAAEV,KAAK,CAACsB;AADoB,GAAZ;AAAA,CAAxB;;AAKFvB,MAAM,CAACwB,SAAP,GAAmB;AACnB1B,EAAAA,SAAS,EAAEF,SAAS,CAAC6B,IAAV,CAAeC,UADP;AAEnBf,EAAAA,MAAM,EAAEf,SAAS,CAAC+B,MAAV,CAAiBD;AAFN,CAAnB,C,CASE;AACM;AACA;AACA;AACA;AACA;AACA;AACA;;AAEN,eAAe3B,OAAO,CAAEuB,eAAF,EAAkB;AAACxB,EAAAA,SAAS,EAATA;AAAD,CAAlB,CAAP,CAAsCE,MAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {getCities} from '../actions/citiesActions';\nimport {connect} from 'react-redux'; \n\nclass Cities extends Component {\n    constructor() {\n      super();\n      this.state = {\n        search: ''\n      };\n    }\n\n    updateSearch(event) {\n      this.setState({search: event.target.value});\n    }\n\n  componentDidMount() {\n    // axios.get(\"/api/city\").then(res => {\n    // console.log(res);\n    //   this.setState({ cities: res.data });\n      this.props.getCities();\n    }\n  \n\n  render() {\n    console.log(this.props)\n      let filteredCities = this.props.cities.cities.filter(\n        (city) => {\n          return city.name.toLowerCase().indexOf(this.state.search) !==-1;\n        }\n      );\n      return (\n      <div>\n        <div>\n            <h2>Cities</h2>\n        </div>\n        <div>\n            <input\n            type=\"text\"\n            value={this.state.search}\n            ref=\"search\"\n            onChange={this.updateSearch.bind(this)}\n            placeholder=\"type city here\"\n            />\n        </div>\n      \n        <div>\n        {filteredCities.map(city => {\n          return (\n        <div  key={city._id}>\n          <Link citiId={city._id} to={`/itinerary/${city._id}`}>\n          <ul>\n            <li>{city.name} {city.country}</li>\n          </ul>\n          </Link>\n        </div>\n\n            )\n        })}\n        </div>\n      </div>\n      );\n\n    }\n  }\n  \n\n  const mapStateToProps = (state) => ({\n    cities: state.reducerOne\n  });\n\n\nCities.propTypes = {\ngetCities: PropTypes.func.isRequired,\ncities: PropTypes.object.isRequired\n};\n\n\n     \n\n\n  // <div className=\"citiesInfo\">\n        // <h2>Barcelona</h2>\n        //     <img src={barcelona} className=\"cityImg\" alt=\"img\"/>\n        //     <h2>Sydney</h2>\n        //     <img src={sydney} className=\"cityImg\" alt=\"img\"/>\n        //     <h2>Vancouver</h2>\n        //     <img src={vancouver} className=\"cityImg\" alt=\"img\"/>\n        // </div>\n  \n  export default connect (mapStateToProps,{getCities})(Cities);"]},"metadata":{},"sourceType":"module"}